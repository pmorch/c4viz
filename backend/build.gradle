plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.moowork.node" version "1.3.1"
}

description = 'C4 Visualizer'
group = 'com.morch'
version = '0.2.0'
sourceCompatibility = '11'

repositories {
    mavenLocal()
    mavenCentral()
    // For plantuml
    maven { url "https://repo1.maven.org/maven2/net/sourceforge/" }
}

dependencies {
    compile 'com.structurizr:structurizr-client:1.13.0'
    compile 'com.structurizr:structurizr-dsl:1.19.1'
    compile 'com.structurizr:structurizr-adr-tools:1.3.8'
    compile 'com.structurizr:structurizr-export:1.5.0'
    compile 'com.structurizr:structurizr-graphviz:1.6.1'
    compile 'net.sourceforge.plantuml:plantuml:1.2021.15'
    compile 'com.structurizr:structurizr-core:1.13.0'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    compile 'com.google.guava:guava:20.0'
    compile 'org.apache.httpcomponents.client5:httpclient5:5.1.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Implementation-Title': description,
                'Implementation-Version': version
        )
    }
}

task appNpmInstall(type: NpmTask) {
    description = "Installs all dependencies from package.json"
    workingDir = file("${project.projectDir}/../frontend")
    args = ["install"]
    onlyIf {
        System.env['SKIP_NPM'] == null || System.env['SKIP_NPM'] == "0"
    }
}

task appNpmBuild(type: NpmTask) {
    description = "Builds production version of the webapp"
    workingDir = file("${project.projectDir}/../frontend")
    args = ["run", "build"]
    onlyIf {
        System.env['SKIP_NPM'] == null || System.env['SKIP_NPM'] == "0"
    }
}

task copyWebApp(type: Copy) {
    from '../frontend/dist'
    into 'build/resources/main/static/.'
    onlyIf {
        System.env['SKIP_NPM'] == null || System.env['SKIP_NPM'] == "0"
    }
}

appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
bootJar.dependsOn copyWebApp
